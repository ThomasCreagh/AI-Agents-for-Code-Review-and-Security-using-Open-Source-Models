services:
  reverse-proxy:
    image: traefik:v3.1
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=tcdsweng2025group23@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
      - "80:80"
      - "8080:8080"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backend-net

  backend:
    build: ./backend
    env_file:
      - .env
    networks:
      - backend-net
    # volumes:
    # - ./backend:/backend-code
    depends_on:
      - ollama
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.keysentinel.xyz`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  ollama:
    build: ollama
    env_file:
      - .env
    # volumes:
    #   - backend-vol:/ollama
    networks:
      - backend-net
    entrypoint: ["/usr/bin/bash", "/get_models.sh"]

  frontend:
    build: ./frontend
    env_file:
      - .env
    depends_on:
      - backend
    deploy:
      mode: replicated
      replicas: 3
    networks:
      - backend-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`keysentinel.xyz`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

networks:
  backend-net:
    driver: bridge
volumes:
  letsencrypt:
# volumes:
#   backend-vol:
#     driver: local
#
